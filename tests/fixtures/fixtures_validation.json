{
  "validate_boolean_data": [
    {
      "value": false,
      "is_valid": true
    },
    {
      "value": true,
      "is_valid": true
    },
    {
      "value": null,
      "is_valid": false
    },
    {
      "value": 0.0,
      "is_valid": false
    },
    {
      "value": 1.0,
      "is_valid": false
    },
    {
      "value": 0,
      "is_valid": false
    },
    {
      "value": 1,
      "is_valid": false
    },
    {
      "value": "true",
      "is_valid": false
    },
    {
      "value": "Y",
      "is_valid": false
    },
    {
      "value": [],
      "is_valid": false
    }
  ],
  "validate_boundary_condition_data": [
    {
      "value": 0.0,
      "is_valid": true
    },
    {
      "value": 0.47,
      "is_valid": true
    },
    {
      "value": 1.0,
      "is_valid": true
    },
    {
      "value": 0,
      "is_valid": true
    },
    {
      "value": 1,
      "is_valid": true
    },
    {
      "value": "absorbing",
      "is_valid": true
    },
    {
      "value": null,
      "is_valid": false
    },
    {
      "value": 4.73,
      "is_valid": false
    },
    {
      "value": true,
      "is_valid": false
    },
    {
      "value": "boundary",
      "is_valid": false
    }
  ],
  "validate_dpi_data": [
    {
      "value": 75,
      "is_valid": true
    },
    {
      "value": 150,
      "is_valid": true
    },
    {
      "value": 200,
      "is_valid": true
    },
    {
      "value": 0,
      "is_valid": false
    },
    {
      "value": 500,
      "is_valid": false
    },
    {
      "value": null,
      "is_valid": false
    },
    {
      "value": 75.0,
      "is_valid": false
    },
    {
      "value": true,
      "is_valid": false
    },
    {
      "value": "200",
      "is_valid": false
    },
    {
      "value": [150],
      "is_valid": false
    }
  ],
  "validate_dictionary_data": [
    {
      "dictionary_elements": [
        ["A", "A", 0.5],
        ["A", "B", 0.5],
        ["B", "A", 0.25],
        ["B", "B", 0.75]
      ],
      "key_tuple": true,
      "is_valid": true
    },
    {
      "dictionary_elements": [
        ["A", "A", 1],
        ["A", "B", 0],
        ["B", "A", 0],
        ["B", "B", 1]
      ],
      "key_tuple": true,
      "is_valid": true
    },
    {
      "dictionary_elements": [
        ["A", null, 1],
        ["A", "B", 0],
        ["B", "A", 0],
        ["B", "B", 1]
      ],
      "key_tuple": true,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", "A", "1", 1],
        ["A", "B", "2", 0],
        ["B", "A", "3", 0],
        ["B", "B", "4", 1]
      ],
      "key_tuple": true,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", 0.8],
        ["B", 0.2]
      ],
      "key_tuple": false,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", "A", 1],
        ["A", "B", null],
        ["B", "A", 0],
        ["B", "B", 1]
      ],
      "key_tuple": true,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", "A", 1],
        ["A", "B", "0"],
        ["B", "A", 0],
        ["B", "B", 1]
      ],
      "key_tuple": true,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", "A", 3.7],
        ["A", "B", -5.3],
        ["B", "A", 4.1],
        ["B", "B", -2.3]
      ],
      "key_tuple": true,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", "A", 0.3],
        ["A", "B", 0.7],
        ["B", "B", 1.0]
      ],
      "key_tuple": true,
      "is_valid": false
    },
    {
      "dictionary_elements": [
        ["A", "A", 1.0],
        ["B", "B", 1.0],
        ["C", "C", 1.0],
        ["D", "D", 1.0]
      ],
      "key_tuple": true,
      "is_valid": false
    }
  ],
  "validate_enumerator_data": [
    {
      "value": "a",
      "possible_values": ["a", "b", "c"],
      "is_valid": true
    },
    {
      "value": "C",
      "possible_values": ["A", "B", "C"],
      "is_valid": true
    },
    {
      "value": "A",
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    },
    {
      "value": "V1",
      "possible_values": ["V1", "V2", null, "V3", -3.8],
      "is_valid": false
    },
    {
      "value": null,
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    },
    {
      "value": 6.34,
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    },
    {
      "value": 17,
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    },
    {
      "value": true,
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    },
    {
      "value": [""],
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    },
    {
      "value": ["a"],
      "possible_values": ["a", "b", "c"],
      "is_valid": false
    }
  ],
  "validate_float_data": [
    {
      "value": 0.0,
      "lower_limit": [0.0, false],
      "upper_limit": [1.0, false],
      "is_valid": true
    },
    {
      "value": 0.5,
      "lower_limit": [0.0, false],
      "upper_limit": [1.0, false],
      "is_valid": true
    },
    {
      "value": 1.0,
      "lower_limit": [0.0, false],
      "upper_limit": [1.0, false],
      "is_valid": true
    },
    {
      "value": 0.5,
      "lower_limit": [0.0, true],
      "upper_limit": [1.0, true],
      "is_valid": true
    },
    {
      "value": 75.0,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": true
    },
    {
      "value": 0.0,
      "lower_limit": [0.0, true],
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": 1.0,
      "lower_limit": null,
      "upper_limit": [1.0, true],
      "is_valid": false
    },
    {
      "value": null,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": 50,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": "Infinity",
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": false
    }
  ],
  "validate_graph_data": [
    {
      "graph_data": [[0.3, 0.7], [0.5, 0.5]],
      "is_valid": true
    },
    {
      "graph_data": [[5, 3], [9, 2]],
      "is_valid": true
    },
    {
      "graph_data": [[1, 0, 1, 0], [1, 1, 1, 1], [0, 0, 1, 1], [0, 0, 0, 1]],
      "is_valid": true
    },
    {
      "graph_data": ["N1", "N2"],
      "is_valid": true
    },
    {
      "graph_data": ["N1", "N2", "N3"],
      "is_valid": true
    },
    {
      "graph_data": [[2.0, 1.8], [-0.5, 3.5]],
      "is_valid": false
    },
    {
      "graph_data": ["N"],
      "is_valid": false
    },
    {
      "graph_data": [null],
      "is_valid": false
    },
    {
      "graph_data": [1, 2],
      "is_valid": false
    },
    {
      "graph_data": [false, true],
      "is_valid": false
    }
  ],
  "validate_hyperparameter_data": [
    {
      "value": [[4, 12, 6], [4, 9, 34], [11, 8, 9]],
      "size": 3,
      "is_valid": true
    },
    {
      "value": [[4.0, 12.0, 6.0], [4.0, 9.0, 34.0], [11.0, 8.0, 9.0]],
      "size": 3,
      "is_valid": true
    },
    {
      "value": [[24, 7, 7], [1, 41, 19], [97, 3, 14]],
      "size": 5,
      "is_valid": false
    },
    {
      "value": [[1.2, 2.9, 3.2], [4.7, 5.1, 6.1], [7.5, 8.4, 9.7]],
      "size": 3,
      "is_valid": false
    },
    {
      "value": [[0, 9, -1, 3], [3, -5, 0, 1], [0, 8, 0, 0], [-2, -1, -1, 6]],
      "size": 4,
      "is_valid": false
    },
    {
      "value": [4, 3, 7],
      "size": 3,
      "is_valid": false
    },
    {
      "value": [[2, 1, 14], [23, 1, 49], [15, 11, 3], [34, 6, 6]],
      "size": 3,
      "is_valid": false
    },
    {
      "value": [["A", "Z", "J"], ["A", "K", "A"], ["P", "R", "B"]],
      "size": 3,
      "is_valid": false
    },
    {
      "value": null,
      "size": [],
      "is_valid": false
    },
    {
      "value": [],
      "size": [],
      "is_valid": false
    }
  ],
  "validate_integer_data": [
    {
      "value": 0,
      "lower_limit": [0, false],
      "upper_limit": [1, false],
      "is_valid": true
    },
    {
      "value": 1,
      "lower_limit": [0, false],
      "upper_limit": [1, false],
      "is_valid": true
    },
    {
      "value": 50,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": true
    },
    {
      "value": 0,
      "lower_limit": [0, true],
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": 1,
      "lower_limit": null,
      "upper_limit": [1, true],
      "is_valid": false
    },
    {
      "value": -10,
      "lower_limit": [0, false],
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": 20,
      "lower_limit": null,
      "upper_limit": [10, false],
      "is_valid": false
    },
    {
      "value": null,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": 25.0,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": false
    },
    {
      "value": true,
      "lower_limit": null,
      "upper_limit": null,
      "is_valid": false
    }
  ],
  "validate_interval_data": [
    {
      "value": [0, 10],
      "is_valid": true
    },
    {
      "value": [5.0, 50.0],
      "is_valid": true
    },
    {
      "value": [2, 6.5],
      "is_valid": true
    },
    {
      "value": [8.5, 4.5],
      "is_valid": false
    },
    {
      "value": [-5, 5],
      "is_valid": false
    },
    {
      "value": [false, true],
      "is_valid": false
    },
    {
      "value": [5.0, "Infinity"],
      "is_valid": false
    },
    {
      "value": [10, 20, 30],
      "is_valid": false
    },
    {
      "value": null,
      "is_valid": false
    },
    {
      "value": [],
      "is_valid": false
    }
  ],
  "validate_state_data": [
    {
      "value": 0,
      "current_states": ["1", "2"],
      "is_valid": true
    },
    {
      "value": 1,
      "current_states": ["1", "2"],
      "is_valid": true
    },
    {
      "value": "D",
      "current_states": ["A", "B", "C", "D", "E"],
      "is_valid": true
    },
    {
      "value": -1,
      "current_states": ["1", "2", "3", "4"],
      "is_valid": false
    },
    {
      "value": 4,
      "current_states": ["1", "2", "3", "4"],
      "is_valid": false
    },
    {
      "value": "",
      "current_states": ["1", "2", "3", "4"],
      "is_valid": false
    },
    {
      "value": null,
      "current_states": ["1", "2", "3", "4"],
      "is_valid": false
    },
    {
      "value": true,
      "current_states": ["1", "2", "3", "4"],
      "is_valid": false
    },
    {
      "value": "8",
      "current_states": ["1", "2", "3", "4"],
      "is_valid": false
    },
    {
      "value": "b",
      "current_states": ["A", "B", "C"],
      "is_valid": false
    }
  ],
  "validate_transition_function_data": [
    {
      "value": "def f(x_index, x_value, y_index, y_value): return 0",
      "is_valid": true
    },
    {
      "value": "def f(x_index: int, x_value: float, y_index: int, y_value: float) -> float: return (x_value * 2) + y_index",
      "is_valid": true
    },
    {
      "value": "lambda x_index, x_value, y_index, y_value: 3.14",
      "is_valid": true
    },
    {
      "value": "lambda x_index, x_value, y_index, y_value: x_value + y_value",
      "is_valid": true
    },
    {
      "value": "def f(a, b, c, d): return a + b + c + d",
      "is_valid": false
    },
    {
      "value": "def f(x, y): return x * y",
      "is_valid": false
    },
    {
      "value": "lambda x_index, x_value, y_index, y_value: None",
      "is_valid": false
    },
    {
      "value": "lambda x_index, x_value, y_index, y_value: float('inf')",
      "is_valid": false
    },
    {
      "value": "lambda x_index, x_value, y_index, y_value: 'RESULT'",
      "is_valid": false
    },
    {
      "value": null,
      "is_valid": false
    }
  ]
}