name: Package Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version:'
        required: true

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        language: [ python ]
    steps:
    - name: Repository Checkout
      uses: actions/checkout@v2
    - name: Python Setup
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
        architecture: x64
    - name: Dependencies Installation
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt --use-feature=in-tree-build
        pip install setuptools
        pip install wheel
        pip install twine
    - name: Build
      run: python setup.py sdist bdist_wheel
    - name: Version Change
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION="${{ github.event.inputs.version }}"
        VERSION_FILE="pydtmc/__init__.py"
        VERSION_REGEX="__version__[[:space:]]=[[:space:]]'[[:digit:]]\.[[:digit:]]\.[[:digit:]]'"
        grep $VERSION_REGEX $VERSION_FILE
        sed -i "s/$VERSION_REGEX/__version__ = '$VERSION'/g" $VERSION_FILE
        grep $VERSION_REGEX $VERSION_FILE
        git config --local user.name "${{ secrets.BOT_USERNAME }}"
        git config --local user.email ${{ secrets.BOT_EMAIL }}
        git add $VERSION_FILE
        git commit -m "Release"
        git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}
        git push
    - name: PyPI Publish
      env:
        TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
